// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: character.proto

#ifndef PROTOBUF_character_2eproto__INCLUDED
#define PROTOBUF_character_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_character_2eproto();
void protobuf_AssignDesc_character_2eproto();
void protobuf_ShutdownFile_character_2eproto();

class BinaryData;
class Character;

// ===================================================================

class BinaryData : public ::google::protobuf::Message {
 public:
  BinaryData();
  virtual ~BinaryData();

  BinaryData(const BinaryData& from);

  inline BinaryData& operator=(const BinaryData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BinaryData& default_instance();

  void Swap(BinaryData* other);

  // implements Message ----------------------------------------------

  inline BinaryData* New() const { return New(NULL); }

  BinaryData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BinaryData& from);
  void MergeFrom(const BinaryData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BinaryData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 x_a = 1;
  bool has_x_a() const;
  void clear_x_a();
  static const int kXAFieldNumber = 1;
  ::google::protobuf::int32 x_a() const;
  void set_x_a(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protobuf.BinaryData)
 private:
  inline void set_has_x_a();
  inline void clear_has_x_a();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 x_a_;
  friend void  protobuf_AddDesc_character_2eproto();
  friend void protobuf_AssignDesc_character_2eproto();
  friend void protobuf_ShutdownFile_character_2eproto();

  void InitAsDefaultInstance();
  static BinaryData* default_instance_;
};
// -------------------------------------------------------------------

class Character : public ::google::protobuf::Message {
 public:
  Character();
  virtual ~Character();

  Character(const Character& from);

  inline Character& operator=(const Character& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Character& default_instance();

  void Swap(Character* other);

  // implements Message ----------------------------------------------

  inline Character* New() const { return New(NULL); }

  Character* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Character& from);
  void MergeFrom(const Character& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Character* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 db_id = 1;
  bool has_db_id() const;
  void clear_db_id();
  static const int kDbIdFieldNumber = 1;
  ::google::protobuf::int32 db_id() const;
  void set_db_id(::google::protobuf::int32 value);

  // optional int64 char_id = 2;
  bool has_char_id() const;
  void clear_char_id();
  static const int kCharIdFieldNumber = 2;
  ::google::protobuf::int64 char_id() const;
  void set_char_id(::google::protobuf::int64 value);

  // optional int32 server_id = 3;
  bool has_server_id() const;
  void clear_server_id();
  static const int kServerIdFieldNumber = 3;
  ::google::protobuf::int32 server_id() const;
  void set_server_id(::google::protobuf::int32 value);

  // optional int64 account_id = 4;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 4;
  ::google::protobuf::int64 account_id() const;
  void set_account_id(::google::protobuf::int64 value);

  // optional string name = 5;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 5;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int32 type = 6;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 6;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int32 exp = 7;
  bool has_exp() const;
  void clear_exp();
  static const int kExpFieldNumber = 7;
  ::google::protobuf::int32 exp() const;
  void set_exp(::google::protobuf::int32 value);

  // optional int32 level = 8;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 8;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // optional int32 land_mapid = 9;
  bool has_land_mapid() const;
  void clear_land_mapid();
  static const int kLandMapidFieldNumber = 9;
  ::google::protobuf::int32 land_mapid() const;
  void set_land_mapid(::google::protobuf::int32 value);

  // optional int32 land_x = 10;
  bool has_land_x() const;
  void clear_land_x();
  static const int kLandXFieldNumber = 10;
  ::google::protobuf::int32 land_x() const;
  void set_land_x(::google::protobuf::int32 value);

  // optional int32 land_y = 11;
  bool has_land_y() const;
  void clear_land_y();
  static const int kLandYFieldNumber = 11;
  ::google::protobuf::int32 land_y() const;
  void set_land_y(::google::protobuf::int32 value);

  // optional int32 instance_mapid = 12;
  bool has_instance_mapid() const;
  void clear_instance_mapid();
  static const int kInstanceMapidFieldNumber = 12;
  ::google::protobuf::int32 instance_mapid() const;
  void set_instance_mapid(::google::protobuf::int32 value);

  // optional int32 instance_x = 13;
  bool has_instance_x() const;
  void clear_instance_x();
  static const int kInstanceXFieldNumber = 13;
  ::google::protobuf::int32 instance_x() const;
  void set_instance_x(::google::protobuf::int32 value);

  // optional int32 instance_y = 14;
  bool has_instance_y() const;
  void clear_instance_y();
  static const int kInstanceYFieldNumber = 14;
  ::google::protobuf::int32 instance_y() const;
  void set_instance_y(::google::protobuf::int32 value);

  // optional int32 red = 15;
  bool has_red() const;
  void clear_red();
  static const int kRedFieldNumber = 15;
  ::google::protobuf::int32 red() const;
  void set_red(::google::protobuf::int32 value);

  // optional int32 blue = 16;
  bool has_blue() const;
  void clear_blue();
  static const int kBlueFieldNumber = 16;
  ::google::protobuf::int32 blue() const;
  void set_blue(::google::protobuf::int32 value);

  // optional int32 created_time = 17;
  bool has_created_time() const;
  void clear_created_time();
  static const int kCreatedTimeFieldNumber = 17;
  ::google::protobuf::int32 created_time() const;
  void set_created_time(::google::protobuf::int32 value);

  // optional .protobuf.BinaryData binary_data = 18;
  bool has_binary_data() const;
  void clear_binary_data();
  static const int kBinaryDataFieldNumber = 18;
  const ::protobuf::BinaryData& binary_data() const;
  ::protobuf::BinaryData* mutable_binary_data();
  ::protobuf::BinaryData* release_binary_data();
  void set_allocated_binary_data(::protobuf::BinaryData* binary_data);

  // @@protoc_insertion_point(class_scope:protobuf.Character)
 private:
  inline void set_has_db_id();
  inline void clear_has_db_id();
  inline void set_has_char_id();
  inline void clear_has_char_id();
  inline void set_has_server_id();
  inline void clear_has_server_id();
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_land_mapid();
  inline void clear_has_land_mapid();
  inline void set_has_land_x();
  inline void clear_has_land_x();
  inline void set_has_land_y();
  inline void clear_has_land_y();
  inline void set_has_instance_mapid();
  inline void clear_has_instance_mapid();
  inline void set_has_instance_x();
  inline void clear_has_instance_x();
  inline void set_has_instance_y();
  inline void clear_has_instance_y();
  inline void set_has_red();
  inline void clear_has_red();
  inline void set_has_blue();
  inline void clear_has_blue();
  inline void set_has_created_time();
  inline void clear_has_created_time();
  inline void set_has_binary_data();
  inline void clear_has_binary_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 char_id_;
  ::google::protobuf::int32 db_id_;
  ::google::protobuf::int32 server_id_;
  ::google::protobuf::int64 account_id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 land_mapid_;
  ::google::protobuf::int32 land_x_;
  ::google::protobuf::int32 land_y_;
  ::google::protobuf::int32 instance_mapid_;
  ::google::protobuf::int32 instance_x_;
  ::google::protobuf::int32 instance_y_;
  ::google::protobuf::int32 red_;
  ::google::protobuf::int32 blue_;
  ::google::protobuf::int32 created_time_;
  ::protobuf::BinaryData* binary_data_;
  friend void  protobuf_AddDesc_character_2eproto();
  friend void protobuf_AssignDesc_character_2eproto();
  friend void protobuf_ShutdownFile_character_2eproto();

  void InitAsDefaultInstance();
  static Character* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// BinaryData

// optional int32 x_a = 1;
inline bool BinaryData::has_x_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BinaryData::set_has_x_a() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BinaryData::clear_has_x_a() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BinaryData::clear_x_a() {
  x_a_ = 0;
  clear_has_x_a();
}
inline ::google::protobuf::int32 BinaryData::x_a() const {
  // @@protoc_insertion_point(field_get:protobuf.BinaryData.x_a)
  return x_a_;
}
inline void BinaryData::set_x_a(::google::protobuf::int32 value) {
  set_has_x_a();
  x_a_ = value;
  // @@protoc_insertion_point(field_set:protobuf.BinaryData.x_a)
}

// -------------------------------------------------------------------

// Character

// optional int32 db_id = 1;
inline bool Character::has_db_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Character::set_has_db_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Character::clear_has_db_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Character::clear_db_id() {
  db_id_ = 0;
  clear_has_db_id();
}
inline ::google::protobuf::int32 Character::db_id() const {
  // @@protoc_insertion_point(field_get:protobuf.Character.db_id)
  return db_id_;
}
inline void Character::set_db_id(::google::protobuf::int32 value) {
  set_has_db_id();
  db_id_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Character.db_id)
}

// optional int64 char_id = 2;
inline bool Character::has_char_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Character::set_has_char_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Character::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Character::clear_char_id() {
  char_id_ = GOOGLE_LONGLONG(0);
  clear_has_char_id();
}
inline ::google::protobuf::int64 Character::char_id() const {
  // @@protoc_insertion_point(field_get:protobuf.Character.char_id)
  return char_id_;
}
inline void Character::set_char_id(::google::protobuf::int64 value) {
  set_has_char_id();
  char_id_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Character.char_id)
}

// optional int32 server_id = 3;
inline bool Character::has_server_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Character::set_has_server_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Character::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Character::clear_server_id() {
  server_id_ = 0;
  clear_has_server_id();
}
inline ::google::protobuf::int32 Character::server_id() const {
  // @@protoc_insertion_point(field_get:protobuf.Character.server_id)
  return server_id_;
}
inline void Character::set_server_id(::google::protobuf::int32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Character.server_id)
}

// optional int64 account_id = 4;
inline bool Character::has_account_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Character::set_has_account_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Character::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Character::clear_account_id() {
  account_id_ = GOOGLE_LONGLONG(0);
  clear_has_account_id();
}
inline ::google::protobuf::int64 Character::account_id() const {
  // @@protoc_insertion_point(field_get:protobuf.Character.account_id)
  return account_id_;
}
inline void Character::set_account_id(::google::protobuf::int64 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Character.account_id)
}

// optional string name = 5;
inline bool Character::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Character::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Character::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Character::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& Character::name() const {
  // @@protoc_insertion_point(field_get:protobuf.Character.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Character::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protobuf.Character.name)
}
inline void Character::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protobuf.Character.name)
}
inline void Character::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protobuf.Character.name)
}
inline ::std::string* Character::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:protobuf.Character.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Character::release_name() {
  // @@protoc_insertion_point(field_release:protobuf.Character.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Character::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:protobuf.Character.name)
}

// optional int32 type = 6;
inline bool Character::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Character::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Character::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Character::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 Character::type() const {
  // @@protoc_insertion_point(field_get:protobuf.Character.type)
  return type_;
}
inline void Character::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Character.type)
}

// optional int32 exp = 7;
inline bool Character::has_exp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Character::set_has_exp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Character::clear_has_exp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Character::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 Character::exp() const {
  // @@protoc_insertion_point(field_get:protobuf.Character.exp)
  return exp_;
}
inline void Character::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Character.exp)
}

// optional int32 level = 8;
inline bool Character::has_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Character::set_has_level() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Character::clear_has_level() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Character::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 Character::level() const {
  // @@protoc_insertion_point(field_get:protobuf.Character.level)
  return level_;
}
inline void Character::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Character.level)
}

// optional int32 land_mapid = 9;
inline bool Character::has_land_mapid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Character::set_has_land_mapid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Character::clear_has_land_mapid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Character::clear_land_mapid() {
  land_mapid_ = 0;
  clear_has_land_mapid();
}
inline ::google::protobuf::int32 Character::land_mapid() const {
  // @@protoc_insertion_point(field_get:protobuf.Character.land_mapid)
  return land_mapid_;
}
inline void Character::set_land_mapid(::google::protobuf::int32 value) {
  set_has_land_mapid();
  land_mapid_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Character.land_mapid)
}

// optional int32 land_x = 10;
inline bool Character::has_land_x() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Character::set_has_land_x() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Character::clear_has_land_x() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Character::clear_land_x() {
  land_x_ = 0;
  clear_has_land_x();
}
inline ::google::protobuf::int32 Character::land_x() const {
  // @@protoc_insertion_point(field_get:protobuf.Character.land_x)
  return land_x_;
}
inline void Character::set_land_x(::google::protobuf::int32 value) {
  set_has_land_x();
  land_x_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Character.land_x)
}

// optional int32 land_y = 11;
inline bool Character::has_land_y() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Character::set_has_land_y() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Character::clear_has_land_y() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Character::clear_land_y() {
  land_y_ = 0;
  clear_has_land_y();
}
inline ::google::protobuf::int32 Character::land_y() const {
  // @@protoc_insertion_point(field_get:protobuf.Character.land_y)
  return land_y_;
}
inline void Character::set_land_y(::google::protobuf::int32 value) {
  set_has_land_y();
  land_y_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Character.land_y)
}

// optional int32 instance_mapid = 12;
inline bool Character::has_instance_mapid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Character::set_has_instance_mapid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Character::clear_has_instance_mapid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Character::clear_instance_mapid() {
  instance_mapid_ = 0;
  clear_has_instance_mapid();
}
inline ::google::protobuf::int32 Character::instance_mapid() const {
  // @@protoc_insertion_point(field_get:protobuf.Character.instance_mapid)
  return instance_mapid_;
}
inline void Character::set_instance_mapid(::google::protobuf::int32 value) {
  set_has_instance_mapid();
  instance_mapid_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Character.instance_mapid)
}

// optional int32 instance_x = 13;
inline bool Character::has_instance_x() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Character::set_has_instance_x() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Character::clear_has_instance_x() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Character::clear_instance_x() {
  instance_x_ = 0;
  clear_has_instance_x();
}
inline ::google::protobuf::int32 Character::instance_x() const {
  // @@protoc_insertion_point(field_get:protobuf.Character.instance_x)
  return instance_x_;
}
inline void Character::set_instance_x(::google::protobuf::int32 value) {
  set_has_instance_x();
  instance_x_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Character.instance_x)
}

// optional int32 instance_y = 14;
inline bool Character::has_instance_y() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Character::set_has_instance_y() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Character::clear_has_instance_y() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Character::clear_instance_y() {
  instance_y_ = 0;
  clear_has_instance_y();
}
inline ::google::protobuf::int32 Character::instance_y() const {
  // @@protoc_insertion_point(field_get:protobuf.Character.instance_y)
  return instance_y_;
}
inline void Character::set_instance_y(::google::protobuf::int32 value) {
  set_has_instance_y();
  instance_y_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Character.instance_y)
}

// optional int32 red = 15;
inline bool Character::has_red() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Character::set_has_red() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Character::clear_has_red() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Character::clear_red() {
  red_ = 0;
  clear_has_red();
}
inline ::google::protobuf::int32 Character::red() const {
  // @@protoc_insertion_point(field_get:protobuf.Character.red)
  return red_;
}
inline void Character::set_red(::google::protobuf::int32 value) {
  set_has_red();
  red_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Character.red)
}

// optional int32 blue = 16;
inline bool Character::has_blue() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Character::set_has_blue() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Character::clear_has_blue() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Character::clear_blue() {
  blue_ = 0;
  clear_has_blue();
}
inline ::google::protobuf::int32 Character::blue() const {
  // @@protoc_insertion_point(field_get:protobuf.Character.blue)
  return blue_;
}
inline void Character::set_blue(::google::protobuf::int32 value) {
  set_has_blue();
  blue_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Character.blue)
}

// optional int32 created_time = 17;
inline bool Character::has_created_time() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Character::set_has_created_time() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Character::clear_has_created_time() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Character::clear_created_time() {
  created_time_ = 0;
  clear_has_created_time();
}
inline ::google::protobuf::int32 Character::created_time() const {
  // @@protoc_insertion_point(field_get:protobuf.Character.created_time)
  return created_time_;
}
inline void Character::set_created_time(::google::protobuf::int32 value) {
  set_has_created_time();
  created_time_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Character.created_time)
}

// optional .protobuf.BinaryData binary_data = 18;
inline bool Character::has_binary_data() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Character::set_has_binary_data() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Character::clear_has_binary_data() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Character::clear_binary_data() {
  if (binary_data_ != NULL) binary_data_->::protobuf::BinaryData::Clear();
  clear_has_binary_data();
}
inline const ::protobuf::BinaryData& Character::binary_data() const {
  // @@protoc_insertion_point(field_get:protobuf.Character.binary_data)
  return binary_data_ != NULL ? *binary_data_ : *default_instance_->binary_data_;
}
inline ::protobuf::BinaryData* Character::mutable_binary_data() {
  set_has_binary_data();
  if (binary_data_ == NULL) {
    binary_data_ = new ::protobuf::BinaryData;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.Character.binary_data)
  return binary_data_;
}
inline ::protobuf::BinaryData* Character::release_binary_data() {
  // @@protoc_insertion_point(field_release:protobuf.Character.binary_data)
  clear_has_binary_data();
  ::protobuf::BinaryData* temp = binary_data_;
  binary_data_ = NULL;
  return temp;
}
inline void Character::set_allocated_binary_data(::protobuf::BinaryData* binary_data) {
  delete binary_data_;
  binary_data_ = binary_data;
  if (binary_data) {
    set_has_binary_data();
  } else {
    clear_has_binary_data();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.Character.binary_data)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_character_2eproto__INCLUDED
