// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: character.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "character.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protobuf {

namespace {

const ::google::protobuf::Descriptor* BinaryData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BinaryData_reflection_ = NULL;
const ::google::protobuf::Descriptor* Character_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Character_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_character_2eproto() {
  protobuf_AddDesc_character_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "character.proto");
  GOOGLE_CHECK(file != NULL);
  BinaryData_descriptor_ = file->message_type(0);
  static const int BinaryData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BinaryData, x_a_),
  };
  BinaryData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BinaryData_descriptor_,
      BinaryData::default_instance_,
      BinaryData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BinaryData, _has_bits_[0]),
      -1,
      -1,
      sizeof(BinaryData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BinaryData, _internal_metadata_),
      -1);
  Character_descriptor_ = file->message_type(1);
  static const int Character_offsets_[18] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Character, db_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Character, char_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Character, server_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Character, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Character, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Character, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Character, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Character, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Character, land_mapid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Character, land_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Character, land_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Character, instance_mapid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Character, instance_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Character, instance_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Character, red_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Character, blue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Character, created_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Character, binary_data_),
  };
  Character_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Character_descriptor_,
      Character::default_instance_,
      Character_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Character, _has_bits_[0]),
      -1,
      -1,
      sizeof(Character),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Character, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_character_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BinaryData_descriptor_, &BinaryData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Character_descriptor_, &Character::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_character_2eproto() {
  delete BinaryData::default_instance_;
  delete BinaryData_reflection_;
  delete Character::default_instance_;
  delete Character_reflection_;
}

void protobuf_AddDesc_character_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017character.proto\022\010protobuf\"\031\n\nBinaryDat"
    "a\022\013\n\003x_a\030\001 \001(\005\"\332\002\n\tCharacter\022\r\n\005db_id\030\001 "
    "\001(\005\022\017\n\007char_id\030\002 \001(\003\022\021\n\tserver_id\030\003 \001(\005\022"
    "\022\n\naccount_id\030\004 \001(\003\022\014\n\004name\030\005 \001(\t\022\014\n\004typ"
    "e\030\006 \001(\005\022\013\n\003exp\030\007 \001(\005\022\r\n\005level\030\010 \001(\005\022\022\n\nl"
    "and_mapid\030\t \001(\005\022\016\n\006land_x\030\n \001(\005\022\016\n\006land_"
    "y\030\013 \001(\005\022\026\n\016instance_mapid\030\014 \001(\005\022\022\n\ninsta"
    "nce_x\030\r \001(\005\022\022\n\ninstance_y\030\016 \001(\005\022\013\n\003red\030\017"
    " \001(\005\022\014\n\004blue\030\020 \001(\005\022\024\n\014created_time\030\021 \001(\005"
    "\022)\n\013binary_data\030\022 \001(\0132\024.protobuf.BinaryD"
    "ata", 403);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "character.proto", &protobuf_RegisterTypes);
  BinaryData::default_instance_ = new BinaryData();
  Character::default_instance_ = new Character();
  BinaryData::default_instance_->InitAsDefaultInstance();
  Character::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_character_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_character_2eproto {
  StaticDescriptorInitializer_character_2eproto() {
    protobuf_AddDesc_character_2eproto();
  }
} static_descriptor_initializer_character_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BinaryData::kXAFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BinaryData::BinaryData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf.BinaryData)
}

void BinaryData::InitAsDefaultInstance() {
}

BinaryData::BinaryData(const BinaryData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf.BinaryData)
}

void BinaryData::SharedCtor() {
  _cached_size_ = 0;
  x_a_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BinaryData::~BinaryData() {
  // @@protoc_insertion_point(destructor:protobuf.BinaryData)
  SharedDtor();
}

void BinaryData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BinaryData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BinaryData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BinaryData_descriptor_;
}

const BinaryData& BinaryData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_character_2eproto();
  return *default_instance_;
}

BinaryData* BinaryData::default_instance_ = NULL;

BinaryData* BinaryData::New(::google::protobuf::Arena* arena) const {
  BinaryData* n = new BinaryData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BinaryData::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.BinaryData)
  x_a_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BinaryData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf.BinaryData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 x_a = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_a_)));
          set_has_x_a();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf.BinaryData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf.BinaryData)
  return false;
#undef DO_
}

void BinaryData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf.BinaryData)
  // optional int32 x_a = 1;
  if (has_x_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x_a(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf.BinaryData)
}

::google::protobuf::uint8* BinaryData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.BinaryData)
  // optional int32 x_a = 1;
  if (has_x_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x_a(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.BinaryData)
  return target;
}

int BinaryData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.BinaryData)
  int total_size = 0;

  // optional int32 x_a = 1;
  if (has_x_a()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x_a());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BinaryData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf.BinaryData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BinaryData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BinaryData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf.BinaryData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf.BinaryData)
    MergeFrom(*source);
  }
}

void BinaryData::MergeFrom(const BinaryData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf.BinaryData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_x_a()) {
      set_x_a(from.x_a());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BinaryData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf.BinaryData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BinaryData::CopyFrom(const BinaryData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.BinaryData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BinaryData::IsInitialized() const {

  return true;
}

void BinaryData::Swap(BinaryData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BinaryData::InternalSwap(BinaryData* other) {
  std::swap(x_a_, other->x_a_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BinaryData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BinaryData_descriptor_;
  metadata.reflection = BinaryData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BinaryData

// optional int32 x_a = 1;
bool BinaryData::has_x_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BinaryData::set_has_x_a() {
  _has_bits_[0] |= 0x00000001u;
}
void BinaryData::clear_has_x_a() {
  _has_bits_[0] &= ~0x00000001u;
}
void BinaryData::clear_x_a() {
  x_a_ = 0;
  clear_has_x_a();
}
 ::google::protobuf::int32 BinaryData::x_a() const {
  // @@protoc_insertion_point(field_get:protobuf.BinaryData.x_a)
  return x_a_;
}
 void BinaryData::set_x_a(::google::protobuf::int32 value) {
  set_has_x_a();
  x_a_ = value;
  // @@protoc_insertion_point(field_set:protobuf.BinaryData.x_a)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Character::kDbIdFieldNumber;
const int Character::kCharIdFieldNumber;
const int Character::kServerIdFieldNumber;
const int Character::kAccountIdFieldNumber;
const int Character::kNameFieldNumber;
const int Character::kTypeFieldNumber;
const int Character::kExpFieldNumber;
const int Character::kLevelFieldNumber;
const int Character::kLandMapidFieldNumber;
const int Character::kLandXFieldNumber;
const int Character::kLandYFieldNumber;
const int Character::kInstanceMapidFieldNumber;
const int Character::kInstanceXFieldNumber;
const int Character::kInstanceYFieldNumber;
const int Character::kRedFieldNumber;
const int Character::kBlueFieldNumber;
const int Character::kCreatedTimeFieldNumber;
const int Character::kBinaryDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Character::Character()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf.Character)
}

void Character::InitAsDefaultInstance() {
  binary_data_ = const_cast< ::protobuf::BinaryData*>(&::protobuf::BinaryData::default_instance());
}

Character::Character(const Character& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf.Character)
}

void Character::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  db_id_ = 0;
  char_id_ = GOOGLE_LONGLONG(0);
  server_id_ = 0;
  account_id_ = GOOGLE_LONGLONG(0);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  exp_ = 0;
  level_ = 0;
  land_mapid_ = 0;
  land_x_ = 0;
  land_y_ = 0;
  instance_mapid_ = 0;
  instance_x_ = 0;
  instance_y_ = 0;
  red_ = 0;
  blue_ = 0;
  created_time_ = 0;
  binary_data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Character::~Character() {
  // @@protoc_insertion_point(destructor:protobuf.Character)
  SharedDtor();
}

void Character::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete binary_data_;
  }
}

void Character::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Character::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Character_descriptor_;
}

const Character& Character::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_character_2eproto();
  return *default_instance_;
}

Character* Character::default_instance_ = NULL;

Character* Character::New(::google::protobuf::Arena* arena) const {
  Character* n = new Character;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Character::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.Character)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Character, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Character*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(char_id_, account_id_);
    ZR_(type_, level_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 65280u) {
    ZR_(land_mapid_, blue_);
  }
  if (_has_bits_[16 / 32] & 196608u) {
    created_time_ = 0;
    if (has_binary_data()) {
      if (binary_data_ != NULL) binary_data_->::protobuf::BinaryData::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Character::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf.Character)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 db_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &db_id_)));
          set_has_db_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_char_id;
        break;
      }

      // optional int64 char_id = 2;
      case 2: {
        if (tag == 16) {
         parse_char_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &char_id_)));
          set_has_char_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_server_id;
        break;
      }

      // optional int32 server_id = 3;
      case 3: {
        if (tag == 24) {
         parse_server_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &server_id_)));
          set_has_server_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_account_id;
        break;
      }

      // optional int64 account_id = 4;
      case 4: {
        if (tag == 32) {
         parse_account_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &account_id_)));
          set_has_account_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_name;
        break;
      }

      // optional string name = 5;
      case 5: {
        if (tag == 42) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf.Character.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_type;
        break;
      }

      // optional int32 type = 6;
      case 6: {
        if (tag == 48) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_exp;
        break;
      }

      // optional int32 exp = 7;
      case 7: {
        if (tag == 56) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_level;
        break;
      }

      // optional int32 level = 8;
      case 8: {
        if (tag == 64) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_land_mapid;
        break;
      }

      // optional int32 land_mapid = 9;
      case 9: {
        if (tag == 72) {
         parse_land_mapid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &land_mapid_)));
          set_has_land_mapid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_land_x;
        break;
      }

      // optional int32 land_x = 10;
      case 10: {
        if (tag == 80) {
         parse_land_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &land_x_)));
          set_has_land_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_land_y;
        break;
      }

      // optional int32 land_y = 11;
      case 11: {
        if (tag == 88) {
         parse_land_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &land_y_)));
          set_has_land_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_instance_mapid;
        break;
      }

      // optional int32 instance_mapid = 12;
      case 12: {
        if (tag == 96) {
         parse_instance_mapid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &instance_mapid_)));
          set_has_instance_mapid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_instance_x;
        break;
      }

      // optional int32 instance_x = 13;
      case 13: {
        if (tag == 104) {
         parse_instance_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &instance_x_)));
          set_has_instance_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_instance_y;
        break;
      }

      // optional int32 instance_y = 14;
      case 14: {
        if (tag == 112) {
         parse_instance_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &instance_y_)));
          set_has_instance_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_red;
        break;
      }

      // optional int32 red = 15;
      case 15: {
        if (tag == 120) {
         parse_red:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &red_)));
          set_has_red();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_blue;
        break;
      }

      // optional int32 blue = 16;
      case 16: {
        if (tag == 128) {
         parse_blue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &blue_)));
          set_has_blue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_created_time;
        break;
      }

      // optional int32 created_time = 17;
      case 17: {
        if (tag == 136) {
         parse_created_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &created_time_)));
          set_has_created_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_binary_data;
        break;
      }

      // optional .protobuf.BinaryData binary_data = 18;
      case 18: {
        if (tag == 146) {
         parse_binary_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_binary_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf.Character)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf.Character)
  return false;
#undef DO_
}

void Character::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf.Character)
  // optional int32 db_id = 1;
  if (has_db_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->db_id(), output);
  }

  // optional int64 char_id = 2;
  if (has_char_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->char_id(), output);
  }

  // optional int32 server_id = 3;
  if (has_server_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->server_id(), output);
  }

  // optional int64 account_id = 4;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->account_id(), output);
  }

  // optional string name = 5;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf.Character.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  // optional int32 type = 6;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->type(), output);
  }

  // optional int32 exp = 7;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->exp(), output);
  }

  // optional int32 level = 8;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->level(), output);
  }

  // optional int32 land_mapid = 9;
  if (has_land_mapid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->land_mapid(), output);
  }

  // optional int32 land_x = 10;
  if (has_land_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->land_x(), output);
  }

  // optional int32 land_y = 11;
  if (has_land_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->land_y(), output);
  }

  // optional int32 instance_mapid = 12;
  if (has_instance_mapid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->instance_mapid(), output);
  }

  // optional int32 instance_x = 13;
  if (has_instance_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->instance_x(), output);
  }

  // optional int32 instance_y = 14;
  if (has_instance_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->instance_y(), output);
  }

  // optional int32 red = 15;
  if (has_red()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->red(), output);
  }

  // optional int32 blue = 16;
  if (has_blue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->blue(), output);
  }

  // optional int32 created_time = 17;
  if (has_created_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->created_time(), output);
  }

  // optional .protobuf.BinaryData binary_data = 18;
  if (has_binary_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, *this->binary_data_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf.Character)
}

::google::protobuf::uint8* Character::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.Character)
  // optional int32 db_id = 1;
  if (has_db_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->db_id(), target);
  }

  // optional int64 char_id = 2;
  if (has_char_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->char_id(), target);
  }

  // optional int32 server_id = 3;
  if (has_server_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->server_id(), target);
  }

  // optional int64 account_id = 4;
  if (has_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->account_id(), target);
  }

  // optional string name = 5;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf.Character.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  // optional int32 type = 6;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->type(), target);
  }

  // optional int32 exp = 7;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->exp(), target);
  }

  // optional int32 level = 8;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->level(), target);
  }

  // optional int32 land_mapid = 9;
  if (has_land_mapid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->land_mapid(), target);
  }

  // optional int32 land_x = 10;
  if (has_land_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->land_x(), target);
  }

  // optional int32 land_y = 11;
  if (has_land_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->land_y(), target);
  }

  // optional int32 instance_mapid = 12;
  if (has_instance_mapid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->instance_mapid(), target);
  }

  // optional int32 instance_x = 13;
  if (has_instance_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->instance_x(), target);
  }

  // optional int32 instance_y = 14;
  if (has_instance_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->instance_y(), target);
  }

  // optional int32 red = 15;
  if (has_red()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->red(), target);
  }

  // optional int32 blue = 16;
  if (has_blue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->blue(), target);
  }

  // optional int32 created_time = 17;
  if (has_created_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->created_time(), target);
  }

  // optional .protobuf.BinaryData binary_data = 18;
  if (has_binary_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        18, *this->binary_data_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.Character)
  return target;
}

int Character::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.Character)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional int32 db_id = 1;
    if (has_db_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->db_id());
    }

    // optional int64 char_id = 2;
    if (has_char_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->char_id());
    }

    // optional int32 server_id = 3;
    if (has_server_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->server_id());
    }

    // optional int64 account_id = 4;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->account_id());
    }

    // optional string name = 5;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 type = 6;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 exp = 7;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp());
    }

    // optional int32 level = 8;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional int32 land_mapid = 9;
    if (has_land_mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->land_mapid());
    }

    // optional int32 land_x = 10;
    if (has_land_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->land_x());
    }

    // optional int32 land_y = 11;
    if (has_land_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->land_y());
    }

    // optional int32 instance_mapid = 12;
    if (has_instance_mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->instance_mapid());
    }

    // optional int32 instance_x = 13;
    if (has_instance_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->instance_x());
    }

    // optional int32 instance_y = 14;
    if (has_instance_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->instance_y());
    }

    // optional int32 red = 15;
    if (has_red()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->red());
    }

    // optional int32 blue = 16;
    if (has_blue()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->blue());
    }

  }
  if (_has_bits_[16 / 32] & 196608u) {
    // optional int32 created_time = 17;
    if (has_created_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->created_time());
    }

    // optional .protobuf.BinaryData binary_data = 18;
    if (has_binary_data()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->binary_data_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Character::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf.Character)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Character* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Character>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf.Character)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf.Character)
    MergeFrom(*source);
  }
}

void Character::MergeFrom(const Character& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf.Character)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_db_id()) {
      set_db_id(from.db_id());
    }
    if (from.has_char_id()) {
      set_char_id(from.char_id());
    }
    if (from.has_server_id()) {
      set_server_id(from.server_id());
    }
    if (from.has_account_id()) {
      set_account_id(from.account_id());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_exp()) {
      set_exp(from.exp());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_land_mapid()) {
      set_land_mapid(from.land_mapid());
    }
    if (from.has_land_x()) {
      set_land_x(from.land_x());
    }
    if (from.has_land_y()) {
      set_land_y(from.land_y());
    }
    if (from.has_instance_mapid()) {
      set_instance_mapid(from.instance_mapid());
    }
    if (from.has_instance_x()) {
      set_instance_x(from.instance_x());
    }
    if (from.has_instance_y()) {
      set_instance_y(from.instance_y());
    }
    if (from.has_red()) {
      set_red(from.red());
    }
    if (from.has_blue()) {
      set_blue(from.blue());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_created_time()) {
      set_created_time(from.created_time());
    }
    if (from.has_binary_data()) {
      mutable_binary_data()->::protobuf::BinaryData::MergeFrom(from.binary_data());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Character::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf.Character)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Character::CopyFrom(const Character& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.Character)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character::IsInitialized() const {

  return true;
}

void Character::Swap(Character* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Character::InternalSwap(Character* other) {
  std::swap(db_id_, other->db_id_);
  std::swap(char_id_, other->char_id_);
  std::swap(server_id_, other->server_id_);
  std::swap(account_id_, other->account_id_);
  name_.Swap(&other->name_);
  std::swap(type_, other->type_);
  std::swap(exp_, other->exp_);
  std::swap(level_, other->level_);
  std::swap(land_mapid_, other->land_mapid_);
  std::swap(land_x_, other->land_x_);
  std::swap(land_y_, other->land_y_);
  std::swap(instance_mapid_, other->instance_mapid_);
  std::swap(instance_x_, other->instance_x_);
  std::swap(instance_y_, other->instance_y_);
  std::swap(red_, other->red_);
  std::swap(blue_, other->blue_);
  std::swap(created_time_, other->created_time_);
  std::swap(binary_data_, other->binary_data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Character::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Character_descriptor_;
  metadata.reflection = Character_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Character

// optional int32 db_id = 1;
bool Character::has_db_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Character::set_has_db_id() {
  _has_bits_[0] |= 0x00000001u;
}
void Character::clear_has_db_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void Character::clear_db_id() {
  db_id_ = 0;
  clear_has_db_id();
}
 ::google::protobuf::int32 Character::db_id() const {
  // @@protoc_insertion_point(field_get:protobuf.Character.db_id)
  return db_id_;
}
 void Character::set_db_id(::google::protobuf::int32 value) {
  set_has_db_id();
  db_id_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Character.db_id)
}

// optional int64 char_id = 2;
bool Character::has_char_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Character::set_has_char_id() {
  _has_bits_[0] |= 0x00000002u;
}
void Character::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void Character::clear_char_id() {
  char_id_ = GOOGLE_LONGLONG(0);
  clear_has_char_id();
}
 ::google::protobuf::int64 Character::char_id() const {
  // @@protoc_insertion_point(field_get:protobuf.Character.char_id)
  return char_id_;
}
 void Character::set_char_id(::google::protobuf::int64 value) {
  set_has_char_id();
  char_id_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Character.char_id)
}

// optional int32 server_id = 3;
bool Character::has_server_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Character::set_has_server_id() {
  _has_bits_[0] |= 0x00000004u;
}
void Character::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void Character::clear_server_id() {
  server_id_ = 0;
  clear_has_server_id();
}
 ::google::protobuf::int32 Character::server_id() const {
  // @@protoc_insertion_point(field_get:protobuf.Character.server_id)
  return server_id_;
}
 void Character::set_server_id(::google::protobuf::int32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Character.server_id)
}

// optional int64 account_id = 4;
bool Character::has_account_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Character::set_has_account_id() {
  _has_bits_[0] |= 0x00000008u;
}
void Character::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void Character::clear_account_id() {
  account_id_ = GOOGLE_LONGLONG(0);
  clear_has_account_id();
}
 ::google::protobuf::int64 Character::account_id() const {
  // @@protoc_insertion_point(field_get:protobuf.Character.account_id)
  return account_id_;
}
 void Character::set_account_id(::google::protobuf::int64 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Character.account_id)
}

// optional string name = 5;
bool Character::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Character::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
void Character::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
void Character::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& Character::name() const {
  // @@protoc_insertion_point(field_get:protobuf.Character.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Character::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protobuf.Character.name)
}
 void Character::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protobuf.Character.name)
}
 void Character::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protobuf.Character.name)
}
 ::std::string* Character::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:protobuf.Character.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Character::release_name() {
  // @@protoc_insertion_point(field_release:protobuf.Character.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Character::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:protobuf.Character.name)
}

// optional int32 type = 6;
bool Character::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Character::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
void Character::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
void Character::clear_type() {
  type_ = 0;
  clear_has_type();
}
 ::google::protobuf::int32 Character::type() const {
  // @@protoc_insertion_point(field_get:protobuf.Character.type)
  return type_;
}
 void Character::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Character.type)
}

// optional int32 exp = 7;
bool Character::has_exp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Character::set_has_exp() {
  _has_bits_[0] |= 0x00000040u;
}
void Character::clear_has_exp() {
  _has_bits_[0] &= ~0x00000040u;
}
void Character::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
 ::google::protobuf::int32 Character::exp() const {
  // @@protoc_insertion_point(field_get:protobuf.Character.exp)
  return exp_;
}
 void Character::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Character.exp)
}

// optional int32 level = 8;
bool Character::has_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Character::set_has_level() {
  _has_bits_[0] |= 0x00000080u;
}
void Character::clear_has_level() {
  _has_bits_[0] &= ~0x00000080u;
}
void Character::clear_level() {
  level_ = 0;
  clear_has_level();
}
 ::google::protobuf::int32 Character::level() const {
  // @@protoc_insertion_point(field_get:protobuf.Character.level)
  return level_;
}
 void Character::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Character.level)
}

// optional int32 land_mapid = 9;
bool Character::has_land_mapid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Character::set_has_land_mapid() {
  _has_bits_[0] |= 0x00000100u;
}
void Character::clear_has_land_mapid() {
  _has_bits_[0] &= ~0x00000100u;
}
void Character::clear_land_mapid() {
  land_mapid_ = 0;
  clear_has_land_mapid();
}
 ::google::protobuf::int32 Character::land_mapid() const {
  // @@protoc_insertion_point(field_get:protobuf.Character.land_mapid)
  return land_mapid_;
}
 void Character::set_land_mapid(::google::protobuf::int32 value) {
  set_has_land_mapid();
  land_mapid_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Character.land_mapid)
}

// optional int32 land_x = 10;
bool Character::has_land_x() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Character::set_has_land_x() {
  _has_bits_[0] |= 0x00000200u;
}
void Character::clear_has_land_x() {
  _has_bits_[0] &= ~0x00000200u;
}
void Character::clear_land_x() {
  land_x_ = 0;
  clear_has_land_x();
}
 ::google::protobuf::int32 Character::land_x() const {
  // @@protoc_insertion_point(field_get:protobuf.Character.land_x)
  return land_x_;
}
 void Character::set_land_x(::google::protobuf::int32 value) {
  set_has_land_x();
  land_x_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Character.land_x)
}

// optional int32 land_y = 11;
bool Character::has_land_y() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void Character::set_has_land_y() {
  _has_bits_[0] |= 0x00000400u;
}
void Character::clear_has_land_y() {
  _has_bits_[0] &= ~0x00000400u;
}
void Character::clear_land_y() {
  land_y_ = 0;
  clear_has_land_y();
}
 ::google::protobuf::int32 Character::land_y() const {
  // @@protoc_insertion_point(field_get:protobuf.Character.land_y)
  return land_y_;
}
 void Character::set_land_y(::google::protobuf::int32 value) {
  set_has_land_y();
  land_y_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Character.land_y)
}

// optional int32 instance_mapid = 12;
bool Character::has_instance_mapid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void Character::set_has_instance_mapid() {
  _has_bits_[0] |= 0x00000800u;
}
void Character::clear_has_instance_mapid() {
  _has_bits_[0] &= ~0x00000800u;
}
void Character::clear_instance_mapid() {
  instance_mapid_ = 0;
  clear_has_instance_mapid();
}
 ::google::protobuf::int32 Character::instance_mapid() const {
  // @@protoc_insertion_point(field_get:protobuf.Character.instance_mapid)
  return instance_mapid_;
}
 void Character::set_instance_mapid(::google::protobuf::int32 value) {
  set_has_instance_mapid();
  instance_mapid_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Character.instance_mapid)
}

// optional int32 instance_x = 13;
bool Character::has_instance_x() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void Character::set_has_instance_x() {
  _has_bits_[0] |= 0x00001000u;
}
void Character::clear_has_instance_x() {
  _has_bits_[0] &= ~0x00001000u;
}
void Character::clear_instance_x() {
  instance_x_ = 0;
  clear_has_instance_x();
}
 ::google::protobuf::int32 Character::instance_x() const {
  // @@protoc_insertion_point(field_get:protobuf.Character.instance_x)
  return instance_x_;
}
 void Character::set_instance_x(::google::protobuf::int32 value) {
  set_has_instance_x();
  instance_x_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Character.instance_x)
}

// optional int32 instance_y = 14;
bool Character::has_instance_y() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void Character::set_has_instance_y() {
  _has_bits_[0] |= 0x00002000u;
}
void Character::clear_has_instance_y() {
  _has_bits_[0] &= ~0x00002000u;
}
void Character::clear_instance_y() {
  instance_y_ = 0;
  clear_has_instance_y();
}
 ::google::protobuf::int32 Character::instance_y() const {
  // @@protoc_insertion_point(field_get:protobuf.Character.instance_y)
  return instance_y_;
}
 void Character::set_instance_y(::google::protobuf::int32 value) {
  set_has_instance_y();
  instance_y_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Character.instance_y)
}

// optional int32 red = 15;
bool Character::has_red() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void Character::set_has_red() {
  _has_bits_[0] |= 0x00004000u;
}
void Character::clear_has_red() {
  _has_bits_[0] &= ~0x00004000u;
}
void Character::clear_red() {
  red_ = 0;
  clear_has_red();
}
 ::google::protobuf::int32 Character::red() const {
  // @@protoc_insertion_point(field_get:protobuf.Character.red)
  return red_;
}
 void Character::set_red(::google::protobuf::int32 value) {
  set_has_red();
  red_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Character.red)
}

// optional int32 blue = 16;
bool Character::has_blue() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void Character::set_has_blue() {
  _has_bits_[0] |= 0x00008000u;
}
void Character::clear_has_blue() {
  _has_bits_[0] &= ~0x00008000u;
}
void Character::clear_blue() {
  blue_ = 0;
  clear_has_blue();
}
 ::google::protobuf::int32 Character::blue() const {
  // @@protoc_insertion_point(field_get:protobuf.Character.blue)
  return blue_;
}
 void Character::set_blue(::google::protobuf::int32 value) {
  set_has_blue();
  blue_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Character.blue)
}

// optional int32 created_time = 17;
bool Character::has_created_time() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void Character::set_has_created_time() {
  _has_bits_[0] |= 0x00010000u;
}
void Character::clear_has_created_time() {
  _has_bits_[0] &= ~0x00010000u;
}
void Character::clear_created_time() {
  created_time_ = 0;
  clear_has_created_time();
}
 ::google::protobuf::int32 Character::created_time() const {
  // @@protoc_insertion_point(field_get:protobuf.Character.created_time)
  return created_time_;
}
 void Character::set_created_time(::google::protobuf::int32 value) {
  set_has_created_time();
  created_time_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Character.created_time)
}

// optional .protobuf.BinaryData binary_data = 18;
bool Character::has_binary_data() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void Character::set_has_binary_data() {
  _has_bits_[0] |= 0x00020000u;
}
void Character::clear_has_binary_data() {
  _has_bits_[0] &= ~0x00020000u;
}
void Character::clear_binary_data() {
  if (binary_data_ != NULL) binary_data_->::protobuf::BinaryData::Clear();
  clear_has_binary_data();
}
const ::protobuf::BinaryData& Character::binary_data() const {
  // @@protoc_insertion_point(field_get:protobuf.Character.binary_data)
  return binary_data_ != NULL ? *binary_data_ : *default_instance_->binary_data_;
}
::protobuf::BinaryData* Character::mutable_binary_data() {
  set_has_binary_data();
  if (binary_data_ == NULL) {
    binary_data_ = new ::protobuf::BinaryData;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.Character.binary_data)
  return binary_data_;
}
::protobuf::BinaryData* Character::release_binary_data() {
  // @@protoc_insertion_point(field_release:protobuf.Character.binary_data)
  clear_has_binary_data();
  ::protobuf::BinaryData* temp = binary_data_;
  binary_data_ = NULL;
  return temp;
}
void Character::set_allocated_binary_data(::protobuf::BinaryData* binary_data) {
  delete binary_data_;
  binary_data_ = binary_data;
  if (binary_data) {
    set_has_binary_data();
  } else {
    clear_has_binary_data();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.Character.binary_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf

// @@protoc_insertion_point(global_scope)
